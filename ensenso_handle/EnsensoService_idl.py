# Python stubs generated by omniidl from EnsensoService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "svcEnsenso"
#
__name__ = "svcEnsenso"
_0_svcEnsenso = omniORB.openModule("svcEnsenso", r"EnsensoService.idl")
_0_svcEnsenso__POA = omniORB.openModule("svcEnsenso__POA", r"EnsensoService.idl")


# struct RpmParameters
_0_svcEnsenso.RpmParameters = omniORB.newEmptyClass()
class RpmParameters (omniORB.StructBase):
    _NP_RepositoryId = "IDL:svcEnsenso/RpmParameters:1.0"

    def __init__(self, pixelsize, size0, size1):
        self.pixelsize = pixelsize
        self.size0 = size0
        self.size1 = size1

_0_svcEnsenso.RpmParameters = RpmParameters
_0_svcEnsenso._d_RpmParameters  = (omniORB.tcInternal.tv_struct, RpmParameters, RpmParameters._NP_RepositoryId, "RpmParameters", "pixelsize", omniORB.tcInternal.tv_float, "size0", omniORB.tcInternal.tv_long, "size1", omniORB.tcInternal.tv_long)
_0_svcEnsenso._tc_RpmParameters = omniORB.tcInternal.createTypeCode(_0_svcEnsenso._d_RpmParameters)
omniORB.registerType(RpmParameters._NP_RepositoryId, _0_svcEnsenso._d_RpmParameters, _0_svcEnsenso._tc_RpmParameters)
del RpmParameters

# interface EnsensoService
_0_svcEnsenso._d_EnsensoService = (omniORB.tcInternal.tv_objref, "IDL:svcEnsenso/EnsensoService:1.0", "EnsensoService")
omniORB.typeMapping["IDL:svcEnsenso/EnsensoService:1.0"] = _0_svcEnsenso._d_EnsensoService
_0_svcEnsenso.EnsensoService = omniORB.newEmptyClass()
class EnsensoService :
    _NP_RepositoryId = _0_svcEnsenso._d_EnsensoService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_svcEnsenso.EnsensoService = EnsensoService
_0_svcEnsenso._tc_EnsensoService = omniORB.tcInternal.createTypeCode(_0_svcEnsenso._d_EnsensoService)
omniORB.registerType(EnsensoService._NP_RepositoryId, _0_svcEnsenso._d_EnsensoService, _0_svcEnsenso._tc_EnsensoService)

# EnsensoService operations and attributes
EnsensoService._d_getRpmParameters = ((), (omniORB.typeMapping["IDL:svcEnsenso/RpmParameters:1.0"], ), None)
EnsensoService._d_setRpmParameters = ((omniORB.typeMapping["IDL:svcEnsenso/RpmParameters:1.0"], ), (omniORB.tcInternal.tv_long, ), None)
EnsensoService._d_projectorConf = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_long, ), None)
EnsensoService._d_switchMonitor = ((omniORB.tcInternal.tv_boolean, ), (omniORB.tcInternal.tv_long, ), None)
EnsensoService._d_setTargetBrightness = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_long, ), None)

# EnsensoService object reference
class _objref_EnsensoService (CORBA.Object):
    _NP_RepositoryId = EnsensoService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getRpmParameters(self, *args):
        return _omnipy.invoke(self, "getRpmParameters", _0_svcEnsenso.EnsensoService._d_getRpmParameters, args)

    def setRpmParameters(self, *args):
        return _omnipy.invoke(self, "setRpmParameters", _0_svcEnsenso.EnsensoService._d_setRpmParameters, args)

    def projectorConf(self, *args):
        return _omnipy.invoke(self, "projectorConf", _0_svcEnsenso.EnsensoService._d_projectorConf, args)

    def switchMonitor(self, *args):
        return _omnipy.invoke(self, "switchMonitor", _0_svcEnsenso.EnsensoService._d_switchMonitor, args)

    def setTargetBrightness(self, *args):
        return _omnipy.invoke(self, "setTargetBrightness", _0_svcEnsenso.EnsensoService._d_setTargetBrightness, args)

    __methods__ = ["getRpmParameters", "setRpmParameters", "projectorConf", "switchMonitor", "setTargetBrightness"] + CORBA.Object.__methods__

omniORB.registerObjref(EnsensoService._NP_RepositoryId, _objref_EnsensoService)
_0_svcEnsenso._objref_EnsensoService = _objref_EnsensoService
del EnsensoService, _objref_EnsensoService

# EnsensoService skeleton
__name__ = "svcEnsenso__POA"
class EnsensoService (PortableServer.Servant):
    _NP_RepositoryId = _0_svcEnsenso.EnsensoService._NP_RepositoryId


    _omni_op_d = {"getRpmParameters": _0_svcEnsenso.EnsensoService._d_getRpmParameters, "setRpmParameters": _0_svcEnsenso.EnsensoService._d_setRpmParameters, "projectorConf": _0_svcEnsenso.EnsensoService._d_projectorConf, "switchMonitor": _0_svcEnsenso.EnsensoService._d_switchMonitor, "setTargetBrightness": _0_svcEnsenso.EnsensoService._d_setTargetBrightness}

EnsensoService._omni_skeleton = EnsensoService
_0_svcEnsenso__POA.EnsensoService = EnsensoService
omniORB.registerSkeleton(EnsensoService._NP_RepositoryId, EnsensoService)
del EnsensoService
__name__ = "svcEnsenso"

#
# End of module "svcEnsenso"
#
__name__ = "EnsensoService_idl"

_exported_modules = ( "svcEnsenso", )

# The end.
