# Python stubs generated by omniidl from TimeKeeperService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"TimeKeeperService.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"TimeKeeperService.idl")


# interface TimeKeeperService
_0_OpenHRP._d_TimeKeeperService = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/TimeKeeperService:1.0", "TimeKeeperService")
omniORB.typeMapping["IDL:OpenHRP/TimeKeeperService:1.0"] = _0_OpenHRP._d_TimeKeeperService
_0_OpenHRP.TimeKeeperService = omniORB.newEmptyClass()
class TimeKeeperService :
    _NP_RepositoryId = _0_OpenHRP._d_TimeKeeperService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenHRP.TimeKeeperService = TimeKeeperService
_0_OpenHRP._tc_TimeKeeperService = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_TimeKeeperService)
omniORB.registerType(TimeKeeperService._NP_RepositoryId, _0_OpenHRP._d_TimeKeeperService, _0_OpenHRP._tc_TimeKeeperService)

# TimeKeeperService operations and attributes
TimeKeeperService._d_sleep = ((omniORB.tcInternal.tv_double, ), (), None)

# TimeKeeperService object reference
class _objref_TimeKeeperService (CORBA.Object):
    _NP_RepositoryId = TimeKeeperService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def sleep(self, *args):
        return _omnipy.invoke(self, "sleep", _0_OpenHRP.TimeKeeperService._d_sleep, args)

    __methods__ = ["sleep"] + CORBA.Object.__methods__

omniORB.registerObjref(TimeKeeperService._NP_RepositoryId, _objref_TimeKeeperService)
_0_OpenHRP._objref_TimeKeeperService = _objref_TimeKeeperService
del TimeKeeperService, _objref_TimeKeeperService

# TimeKeeperService skeleton
__name__ = "OpenHRP__POA"
class TimeKeeperService (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.TimeKeeperService._NP_RepositoryId


    _omni_op_d = {"sleep": _0_OpenHRP.TimeKeeperService._d_sleep}

TimeKeeperService._omni_skeleton = TimeKeeperService
_0_OpenHRP__POA.TimeKeeperService = TimeKeeperService
omniORB.registerSkeleton(TimeKeeperService._NP_RepositoryId, TimeKeeperService)
del TimeKeeperService
__name__ = "OpenHRP"

#
# End of module "OpenHRP"
#
__name__ = "TimeKeeperService_idl"

_exported_modules = ( "OpenHRP", )

# The end.
