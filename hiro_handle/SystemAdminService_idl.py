# Python stubs generated by omniidl from SystemAdminService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"SystemAdminService.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"SystemAdminService.idl")


# interface SystemAdminService
_0_OpenHRP._d_SystemAdminService = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/SystemAdminService:1.0", "SystemAdminService")
omniORB.typeMapping["IDL:OpenHRP/SystemAdminService:1.0"] = _0_OpenHRP._d_SystemAdminService
_0_OpenHRP.SystemAdminService = omniORB.newEmptyClass()
class SystemAdminService :
    _NP_RepositoryId = _0_OpenHRP._d_SystemAdminService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenHRP.SystemAdminService = SystemAdminService
_0_OpenHRP._tc_SystemAdminService = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_SystemAdminService)
omniORB.registerType(SystemAdminService._NP_RepositoryId, _0_OpenHRP._d_SystemAdminService, _0_OpenHRP._tc_SystemAdminService)

# SystemAdminService operations and attributes
SystemAdminService._d_getVersion = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
SystemAdminService._d_backupSystem = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_ulong, ), None)
SystemAdminService._d_upgrade = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_ulong, ), None)
SystemAdminService._d_reboot = (((omniORB.tcInternal.tv_string,0), ), None, None)
SystemAdminService._d_shutdown = (((omniORB.tcInternal.tv_string,0), ), None, None)

# SystemAdminService object reference
class _objref_SystemAdminService (CORBA.Object):
    _NP_RepositoryId = SystemAdminService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getVersion(self, *args):
        return _omnipy.invoke(self, "getVersion", _0_OpenHRP.SystemAdminService._d_getVersion, args)

    def backupSystem(self, *args):
        return _omnipy.invoke(self, "backupSystem", _0_OpenHRP.SystemAdminService._d_backupSystem, args)

    def upgrade(self, *args):
        return _omnipy.invoke(self, "upgrade", _0_OpenHRP.SystemAdminService._d_upgrade, args)

    def reboot(self, *args):
        return _omnipy.invoke(self, "reboot", _0_OpenHRP.SystemAdminService._d_reboot, args)

    def shutdown(self, *args):
        return _omnipy.invoke(self, "shutdown", _0_OpenHRP.SystemAdminService._d_shutdown, args)

    __methods__ = ["getVersion", "backupSystem", "upgrade", "reboot", "shutdown"] + CORBA.Object.__methods__

omniORB.registerObjref(SystemAdminService._NP_RepositoryId, _objref_SystemAdminService)
_0_OpenHRP._objref_SystemAdminService = _objref_SystemAdminService
del SystemAdminService, _objref_SystemAdminService

# SystemAdminService skeleton
__name__ = "OpenHRP__POA"
class SystemAdminService (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.SystemAdminService._NP_RepositoryId


    _omni_op_d = {"getVersion": _0_OpenHRP.SystemAdminService._d_getVersion, "backupSystem": _0_OpenHRP.SystemAdminService._d_backupSystem, "upgrade": _0_OpenHRP.SystemAdminService._d_upgrade, "reboot": _0_OpenHRP.SystemAdminService._d_reboot, "shutdown": _0_OpenHRP.SystemAdminService._d_shutdown}

SystemAdminService._omni_skeleton = SystemAdminService
_0_OpenHRP__POA.SystemAdminService = SystemAdminService
omniORB.registerSkeleton(SystemAdminService._NP_RepositoryId, SystemAdminService)
del SystemAdminService
__name__ = "OpenHRP"

#
# End of module "OpenHRP"
#
__name__ = "SystemAdminService_idl"

_exported_modules = ( "OpenHRP", )

# The end.
