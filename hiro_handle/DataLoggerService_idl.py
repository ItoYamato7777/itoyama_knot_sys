# Python stubs generated by omniidl from DataLoggerService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"DataLoggerService.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"DataLoggerService.idl")


# interface DataLoggerService
_0_OpenHRP._d_DataLoggerService = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/DataLoggerService:1.0", "DataLoggerService")
omniORB.typeMapping["IDL:OpenHRP/DataLoggerService:1.0"] = _0_OpenHRP._d_DataLoggerService
_0_OpenHRP.DataLoggerService = omniORB.newEmptyClass()
class DataLoggerService :
    _NP_RepositoryId = _0_OpenHRP._d_DataLoggerService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenHRP.DataLoggerService = DataLoggerService
_0_OpenHRP._tc_DataLoggerService = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_DataLoggerService)
omniORB.registerType(DataLoggerService._NP_RepositoryId, _0_OpenHRP._d_DataLoggerService, _0_OpenHRP._tc_DataLoggerService)

# DataLoggerService operations and attributes
DataLoggerService._d_add = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)
DataLoggerService._d_save = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), None)
DataLoggerService._d_clear = ((), (omniORB.tcInternal.tv_boolean, ), None)

# DataLoggerService object reference
class _objref_DataLoggerService (CORBA.Object):
    _NP_RepositoryId = DataLoggerService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def add(self, *args):
        return _omnipy.invoke(self, "add", _0_OpenHRP.DataLoggerService._d_add, args)

    def save(self, *args):
        return _omnipy.invoke(self, "save", _0_OpenHRP.DataLoggerService._d_save, args)

    def clear(self, *args):
        return _omnipy.invoke(self, "clear", _0_OpenHRP.DataLoggerService._d_clear, args)

    __methods__ = ["add", "save", "clear"] + CORBA.Object.__methods__

omniORB.registerObjref(DataLoggerService._NP_RepositoryId, _objref_DataLoggerService)
_0_OpenHRP._objref_DataLoggerService = _objref_DataLoggerService
del DataLoggerService, _objref_DataLoggerService

# DataLoggerService skeleton
__name__ = "OpenHRP__POA"
class DataLoggerService (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.DataLoggerService._NP_RepositoryId


    _omni_op_d = {"add": _0_OpenHRP.DataLoggerService._d_add, "save": _0_OpenHRP.DataLoggerService._d_save, "clear": _0_OpenHRP.DataLoggerService._d_clear}

DataLoggerService._omni_skeleton = DataLoggerService
_0_OpenHRP__POA.DataLoggerService = DataLoggerService
omniORB.registerSkeleton(DataLoggerService._NP_RepositoryId, DataLoggerService)
del DataLoggerService
__name__ = "OpenHRP"

#
# End of module "OpenHRP"
#
__name__ = "DataLoggerService_idl"

_exported_modules = ( "OpenHRP", )

# The end.
