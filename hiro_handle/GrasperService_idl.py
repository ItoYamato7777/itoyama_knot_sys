# Python stubs generated by omniidl from GrasperService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"GrasperService.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"GrasperService.idl")


# interface GrasperService
_0_OpenHRP._d_GrasperService = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/GrasperService:1.0", "GrasperService")
omniORB.typeMapping["IDL:OpenHRP/GrasperService:1.0"] = _0_OpenHRP._d_GrasperService
_0_OpenHRP.GrasperService = omniORB.newEmptyClass()
class GrasperService :
    _NP_RepositoryId = _0_OpenHRP._d_GrasperService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # typedef ... DblSequence
    class DblSequence:
        _NP_RepositoryId = "IDL:OpenHRP/GrasperService/DblSequence:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_DblSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
    _ad_DblSequence = (omniORB.tcInternal.tv_alias, DblSequence._NP_RepositoryId, "DblSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
    _tc_DblSequence = omniORB.tcInternal.createTypeCode(_ad_DblSequence)
    omniORB.registerType(DblSequence._NP_RepositoryId, _ad_DblSequence, _tc_DblSequence)


_0_OpenHRP.GrasperService = GrasperService
_0_OpenHRP._tc_GrasperService = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_GrasperService)
omniORB.registerType(GrasperService._NP_RepositoryId, _0_OpenHRP._d_GrasperService, _0_OpenHRP._tc_GrasperService)

# GrasperService operations and attributes
GrasperService._d_isEmpty = ((omniORB.tcInternal.tv_octet, omniORB.tcInternal.tv_boolean), (omniORB.tcInternal.tv_boolean, ), None)
GrasperService._d_setJointAngles = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:OpenHRP/GrasperService/DblSequence:1.0"], omniORB.tcInternal.tv_double), (omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_double), None)
GrasperService._d_setJointAngle = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double), (omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_double), None)

# GrasperService object reference
class _objref_GrasperService (CORBA.Object):
    _NP_RepositoryId = GrasperService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def isEmpty(self, *args):
        return _omnipy.invoke(self, "isEmpty", _0_OpenHRP.GrasperService._d_isEmpty, args)

    def setJointAngles(self, *args):
        return _omnipy.invoke(self, "setJointAngles", _0_OpenHRP.GrasperService._d_setJointAngles, args)

    def setJointAngle(self, *args):
        return _omnipy.invoke(self, "setJointAngle", _0_OpenHRP.GrasperService._d_setJointAngle, args)

    __methods__ = ["isEmpty", "setJointAngles", "setJointAngle"] + CORBA.Object.__methods__

omniORB.registerObjref(GrasperService._NP_RepositoryId, _objref_GrasperService)
_0_OpenHRP._objref_GrasperService = _objref_GrasperService
del GrasperService, _objref_GrasperService

# GrasperService skeleton
__name__ = "OpenHRP__POA"
class GrasperService (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.GrasperService._NP_RepositoryId


    _omni_op_d = {"isEmpty": _0_OpenHRP.GrasperService._d_isEmpty, "setJointAngles": _0_OpenHRP.GrasperService._d_setJointAngles, "setJointAngle": _0_OpenHRP.GrasperService._d_setJointAngle}

GrasperService._omni_skeleton = GrasperService
_0_OpenHRP__POA.GrasperService = GrasperService
omniORB.registerSkeleton(GrasperService._NP_RepositoryId, GrasperService)
del GrasperService
__name__ = "OpenHRP"

#
# End of module "OpenHRP"
#
__name__ = "GrasperService_idl"

_exported_modules = ( "OpenHRP", )

# The end.
